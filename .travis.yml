sudo: true
services:
- docker

addons:
  apt:
    packages:
      - jq

before_install:
- /bin/sh .travis.updateDocker.sh
- sudo sysctl -w vm.max_map_count=262144
# No longer need to override the defaults to enable CORS
# - cp test/elasticsearch/elasticsearch.yml elasticsearch-docker/build/elasticsearch/
# download test files for OCR via tesseract
- wget https://www.codeproject.com/KB/recipes/OCR-Chain-Code/image012.jpg -O test/data/image012.jpg
- wget https://raw.githubusercontent.com/tesseract-ocr/docs/master/AT-1995.pdf -O test/data/AT-1995.pdf

install:
- docker-compose up --build -d elasticsearch1 fscrawler
- echo "Sleeping while ES boots up and fscrawler runs" && sleep 180

script:

# Test that the sleep time was enough for fscrawler to complete
# 1st test for log message
# https://stackoverflow.com/a/27726913/4126114
# 2nd test for existence of status file
- echo "`docker-compose logs fscrawler | tail -n1`" | grep -q "Fs crawler is going to sleep"
- docker-compose
    exec fscrawler
    ls /usr/share/fscrawler/config/docker-compose/_status.json

# Test that tesseract works
- docker-compose exec fscrawler tesseract -psm 3 /usr/share/fscrawler/data/image012.jpg /home/fscrawler/image012
- docker-compose exec fscrawler cat /home/fscrawler/image012.txt
- docker-compose exec fscrawler grep ABCDE /home/fscrawler/image012.txt

# show test.txt contents is not null and then check it in logs
# https://github.com/dadoonet/fscrawler/issues/276
# TODO: how to automate testing this?
- docker-compose
    exec fscrawler
    cat /usr/share/fscrawler/data/test.txt

# Test that this run indexes all 3 files: test.txt, image012.jpg, AT-1995.pdf
- docker-compose
    exec fscrawler
    cat /usr/share/fscrawler/config/docker-compose/_status.json > test/actual_status.json
- cat test/actual_status.json
- test `cat test/actual_status.json |jq '.indexed'` -eq 3

# show bulk_size in settings file and then check it in logs
# https://github.com/dadoonet/fscrawler/issues/283
# TODO: how to automate testing this?
- docker-compose
    exec fscrawler
    cat /usr/share/fscrawler/config/docker-compose/_settings.json

# test that test.txt is indeed an ID since `filename_as_id: true` is used
# https://github.com/dadoonet/fscrawler/issues/282
#
# Note 'jq' usage below to pretty-print
# http://stackoverflow.com/a/15231463/4126114
#
# TODO: enable test line below when issue solved
- docker-compose
   exec elasticsearch1
   curl -XGET http://elasticsearch1:9200/docker-compose/doc/test.txt?pretty
#   > test/actual_doc.json
#- cat test/actual_doc.json | jq .
#- test `cat test/actual_doc.json | jq '.found'` == "true"

# Check contents of OCR test files
- docker-compose
   exec elasticsearch1
   curl -XGET http://elasticsearch1:9200/docker-compose/doc/image012.jpg?pretty
- docker-compose
   exec elasticsearch1
   curl -XGET http://elasticsearch1:9200/docker-compose/doc/AT-1995.pdf?pretty

after_script:
- docker-compose down -v

after_failure:
# show logs for debugging
- docker-compose logs elasticsearch1
- docker-compose logs fscrawler

