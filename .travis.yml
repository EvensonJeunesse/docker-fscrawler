sudo: true
services:
- docker
env:
  global:
    # Copied from elasticsearch-docker/Makefile
    - ELASTIC_VERSION=5.1.2
    - ES_DOWNLOAD_URL=https://artifacts.elastic.co/downloads/elasticsearch
    - ES_JAVA_OPTS=""
    - ELASTIC_REGISTRY=docker.elastic.co
    - VERSIONED_IMAGE=${ELASTIC_REGISTRY}/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    - BASEIMAGE=${ELASTIC_REGISTRY}/elasticsearch/elasticsearch-alpine-base:latest
    - ES_NODE_COUNT=1
addons:
  apt:
    packages:
      - jq

before_install:
- sudo sysctl -w vm.max_map_count=262144
- cp test/elasticsearch/elasticsearch.yml elasticsearch-docker/build/elasticsearch/
# copied from elasticsearch-docker/Makefile, run-es-single step
- docker pull ${BASEIMAGE}
# download test files for OCR via tesseract
- wget https://www.codeproject.com/KB/recipes/OCR-Chain-Code/image012.jpg -O test/data/image012.jpg
- wget https://raw.githubusercontent.com/tesseract-ocr/docs/master/AT-1995.pdf -O test/data/AT-1995.pdf

install:
- ./docker_up.sh

script:
# show logs for debugging
- docker-compose 
    -f elasticsearch-docker/docker-compose.yml
    -f docker-compose.yml
    logs fscrawler

# show test.txt contents is not null and then check it in logs
# https://github.com/dadoonet/fscrawler/issues/276
# TODO: how to automate testing this?
- docker-compose 
    -f elasticsearch-docker/docker-compose.yml
    -f docker-compose.yml
    exec fscrawler
    cat /usr/share/fscrawler/data/test.txt

# Test that this run indexes at least 1
- docker-compose 
    -f elasticsearch-docker/docker-compose.yml
    -f docker-compose.yml
    exec fscrawler
    cat /usr/share/fscrawler/config/myjob/_status.json > test/actual_status.json
- cat test/actual_status.json
- test `cat test/actual_status.json |jq '.indexed'` -eq 1

# show bulk_size in settings file and then check it in logs
# https://github.com/dadoonet/fscrawler/issues/283
# TODO: how to automate testing this?
- docker-compose 
    -f elasticsearch-docker/docker-compose.yml
    -f docker-compose.yml
    exec fscrawler
    cat /usr/share/fscrawler/config/myjob/_settings.json

# test that test.txt is indeed an ID since `filename_as_id: true` is used
# https://github.com/dadoonet/fscrawler/issues/282
#
# Note 'jq' usage below to pretty-print
# http://stackoverflow.com/a/15231463/4126114
#
# TODO: enable test line below when issue solved
- docker-compose
   -f elasticsearch-docker/docker-compose.yml
   -f docker-compose.yml
   exec elasticsearch1
   curl -XGET http://elasticsearch1:9200/docker-fscrawler/doc/test.txt?pretty
#   > test/actual_doc.json
#- cat test/actual_doc.json | jq .
#- test `cat test/actual_doc.json | jq '.found'` == "true"

# Check contents of OCR test files
- docker-compose
   -f elasticsearch-docker/docker-compose.yml
   -f docker-compose.yml
   exec elasticsearch1
   curl -XGET http://elasticsearch1:9200/docker-fscrawler/doc/image012.jpg?pretty
- docker-compose
   -f elasticsearch-docker/docker-compose.yml
   -f docker-compose.yml
   exec elasticsearch1
   curl -XGET http://elasticsearch1:9200/docker-fscrawler/doc/AT-1995.pdf?pretty

after_script:
- docker-compose
    -f elasticsearch-docker/docker-compose.yml
    -f docker-compose.yml
    down
